services:
  db:
    image: postgres:15
    container_name: weather-db
    restart: always
    environment:
      POSTGRES_DB: weather
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  api-gateway:
    build:
      context: .
      dockerfile: ./services/api-gateway/Dockerfile
    container_name: api-gateway
    restart: always
    ports:
      - "3000:3000"
    env_file:
      - ./services/api-gateway/.env
    depends_on:
      - weather-service
      - subscription-service
    volumes:
      - ./services/api-gateway/src:/app/services/api-gateway/src
    command: sh -c "npm run start:dev"

  weather-service:
    build:
      context: .
      dockerfile: ./services/weather-service/Dockerfile
    container_name: weather-service
    restart: always
    env_file:
      - ./services/weather-service/.env
    depends_on:
      - redis
    ports:
      - "3001:3001"
    volumes:
      - ./services/weather-service/src:/app/services/weather-service/src
    command: sh -c "npm run start:dev"

  subscription-service:
    build:
      context: .
      dockerfile: ./services/subscription-service/Dockerfile
    container_name: subscription-service
    restart: always
    env_file:
      - ./services/subscription-service/.env
    depends_on:
      - db
      - redis
    ports:
      - "3002:3002"
    volumes:
      - ./services/subscription-service/src:/app/services/subscription-service/src
    command: sh -c "npm run start:dev"

  redis:
    image: redis:alpine
    container_name: weather-redis
    ports:
      - "6379:6379"
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: weather-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yaml:/etc/prometheus/prometheus.yml
    restart: always

  frontend:
    image: nginx:alpine
    container_name: weather-frontend
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    restart: always


volumes:
  pgdata:
